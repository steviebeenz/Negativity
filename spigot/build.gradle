import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'com.github.johnrengelman.shadow'
}

sourceSets {
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
}

repositories {
    maven {
        name 'sonatype'
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name 'spigot'
        url 'https://repo.codemc.org/repository/nms/'
    }
}

configurations {
    spigot
    compileClasspath.extendsFrom spigot
}

dependencies {
    api project(':common')
    implementation 'org.bstats:bstats-bukkit:1.7'
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.5.0'
    //spigot fileTree(dir: "spigotJars", includes: ['*.jar'])
    compileOnly 'org.spigotmc:spigot:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'org.bukkit:craftbukkit:1.7.10-R0.1-SNAPSHOT'
}

processResources {
    def props = [version: version]
    inputs.properties(props)
    // Do not try to expand service files, they may contain a dollar sign to mark inner classes
    filesNotMatching('META-INF/services/*') {
        expand(props)
    }
}

shadowJar {
    archiveBaseName.set('negativity')
    archiveAppendix.set('spigot')
    archiveClassifier.set(null)

    relocate('org.bstats', 'com.elikill58.negativity')

    mergeServiceFiles()
    from(project(':common').tasks.shadowJar,
            project('integrations:essentials').jar.outputs.files,
            project('integrations:floodgate').jar.outputs.files,
            project('integrations:gadgetsmenu').jar.outputs.files,
            project('integrations:maxbans').jar.outputs.files,
            project('integrations:protocolsupport').jar.outputs.files,
            project('integrations:worldguard').jar.outputs.files
    )
}

build.dependsOn shadowJar

parent.tasks.named('shadowJar', ShadowJar) {
    it.from(shadowJar.outputs)
}

task prepareServer(type: Copy) {
    from shadowJar.outputs
    rename { 'negativity.jar' }
    def pluginDir = System.getProperty('plugins.dir')
    if (pluginDir == null) {
        enabled(false)
    } else {
        into pluginDir
    }
}
